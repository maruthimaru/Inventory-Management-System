package com.example.myapplication.utils

class StringsValue {
    var titleCourier = "Courier Entry"
    var titleGatePass = "Gatepass Entry"
    var titleHome = "Home"
    var titlereport = "Reports"
    var titlemasters = "Masters"
    var titleiomreport = "Iom Report"
    var titlecourierreport = "Courier Report"
    var titleempeport = "Employee Report"
    var titleVisitorReg = "Visitor registration"
    var titleVisitorHome = "Visitor Home"
    var titlePopUpCour = "Add Company"
    var titlePopUpVisitor = "Visitor type"
    var titleInwardEntry = "Inward Entry"
    var titleCourierInward = "Courier Inward"
    var titleCourierOutward = "Courier Outward"
    var titleOutwardEntry = "Outward Entry"
    var titleSetting = "Settings"
    var titleMaster = "Master"
    var titleTime = "Select Time"
    var titleUserManagement = "User Management"
    var titleVehicle = "Vehicle Entry"
    var titleVisitor = "Visitor Entry"
    var titlesettings = "Settings"
    var titlecompanysettings = "Company Setting"
    var titleemailsettings = "Email Setting"
    var titleprefixsettings = "Prefix Setting"
    var requiredName = "Name required"
    var requiredUnitName = "Unit name required"
    var requiredGateName = "Gate name required"
    var requiredPassword = "password required"
    var requiredAddress = "Address required"
    var requiredPhone = "Phone number Required"
    var requiredCrypto = "Crypto Required"
    var requiredSmtpPort = "Smtp port Required"
    var requiredEmail = "Email Required"
    var requiredConformPassword = "Conform password required"
    var requiredCompanyName = "Company name required"
    var requiredPurpose = "purpose required"
    var requiredVehicleNo = "Vehicle number required"
    var requiredBillNo = "Bill number required"
    var requiredAuthorized = "Authorised person required"
    var requiredContactNo = "Contact number required"
    var requiredCompanyLocation = "Company Location required"
    var requiredPurposeToMeet = "purpose to meet required"
    var requiredPersonToMeet = "Person to meet required"
    var requiredMinLenContactNo = "Minimum 10 number required"
    var login = "Login successfully"
    var addedVehicle = "vehicle added"
    var added = "Added"
    var addedSetting = "Company Added"
    var addedUser = "User Added"
    var addedVisitor = "visitor added"
    var updateVisitor = "visitor update"
    var logout = "logout successfull"
    var couriers = "Couries"
    var visitor = "Visitor"
    var vechicle = "Vehicle"
    var visitorPass = "VP"
    var courierPass = "CP"
    var gatepass = "Gate Pass"
    var master = "Master"
    var tablemanager = "manager"
    var managerentry = "manager"
    var courierEntryToast = "Entry Added"
    var chooseCompany = "Choose Company"
    var choosevisitor = "Choose Visitor"
    var chooseVehicleType = "Choose Vehicle Type"
    var choosePurpose = "Choose Purpose"
    var chooseType = "Choose user type"
    var chooseunit = "Choose Unit"
    var choosegate = "Choose Gate"
    var errorLogin = "Invalid login"
    var errorsendingtrough = "Select any send through"
    var errorSendingWhom = "Select manager | visitor"
    var errorPassword = "Miss Match Password"
    var errorList = "list not working"
    var errorManager = "no manager found"
    var errorSetting = "check the settings"
    var errorCamara = "need camera permission"
    var alreadyName = "name already exist"
    var alreadyExisist = "already exisist"
    var alreadyexisistnumber = "Contact number already exisist"
    var needToAdd = "need to add"
    var takePhoto = "Take photo"
    var outTimeNull = "NULL"
    var selectvisitortype = "Select visitor type"
    var managerMessage = "some one is waiting for you"
    var visitorMessage = "you can go"
    var firstMessage = "Hi"
    var mailSubject = "Testing"
    var noDataFound = "No Data Found"
    var cancel = "cancle"
    var dashBoard = "DashBoard"

    companion object {
        var param = "key"
        const val details="details"
        const val view="view"
    }
}
